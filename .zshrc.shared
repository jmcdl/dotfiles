#!/usr/bin/env zsh

autoload -Uz compinit
compinit

### CONFIGURE ALIASES
alias l="ls -alG"
alias j="jump"
alias lg="lazygit"
alias emacs="Emacs&"
alias ec="emacsclient -nw"
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

### PATH extensions
# add Sublime Text to path
export PATH="/Applications/Sublime Text.app/Contents/SharedSupport/bin:$PATH"
# add emacs-mac-app to path
export PATH="/Applications/MacPorts/EmacsMac.app/Contents/MacOS/:$PATH"
export PATH="/Applications/MacPorts/EmacsMac.app/Contents/MacOS/bin:$PATH"
# add doom emacs binaries to path
export PATH="$HOME/.emacs.d/bin:$PATH"
# set emacs as the default terminal text editor
export EDITOR="emacsclient -nw"

### LOAD PLUGINS
source ~/.zsh/git.plugin.zsh
source ~/.zsh/jump.plugin.zsh
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.zsh/zsh-history-substring-search/zsh-history-substring-search.zsh

# Remove superfluous blanks from each command line being added to the history
# list
setopt histreduceblanks
# Remove command lines from the history list when the first character on the
# line is a space, or when one of the expanded aliases contains a leading space
setopt histignorespace
# Do not enter command lines into the history list if they are duplicates of the
# previous event.
setopt histignorealldups
# Switching directories for lazy people
setopt autocd
# See: http://zsh.sourceforge.net/Intro/intro_6.html
setopt autopushd pushdminus pushdsilent pushdtohome pushdignoredups
# Try to correct the spelling of commands
setopt correct


### CONFIGURE ZSH PROMPT
# setup git information
autoload -Uz vcs_info
precmd_functions+=( vcs_info )
setopt prompt_subst


# %b: branch
# %u: unstaged changes
zstyle ':vcs_info:git:*' formats '%F{green}(%b%u)%f '
# this makes %u work, but also the prompt is clearly slower in git dirs when this is on
zstyle ':vcs_info:*' check-for-changes true
# what string to use for %u when there are unstaged changes
zstyle ':vcs_info:*' unstagedstr '%F{red}*%f'
# vcs_info supports multiple version control systems, but I need just git
zstyle ':vcs_info:*' enable git

# Explaining prompt:
# %B / %F{n}: begin bold / color
# %b / %f: end bold / color
# %n~: display n latest directories of current directory
# %#: display a '%' (or '#' when root)
# %(..): conditional expression (see docs)
# %?: exit code of last process
# %n@%m: user@host
PROMPT='%B%F{blue}%2~%f ${vcs_info_msg_0_}%# %b'
# rprompt is located on the right side of the terminal
RPROMPT='%F{yellow}%D{%f/%m/%y %L:%M:%S}%f'

### FUNCTIONS

# take functions - stolen from oh-my-zsh

# mkcd is equivalent to takedir
function mkcd takedir() {
  mkdir -p $@ && cd ${@:$#}
}

function takeurl() {
  local data thedir
  data="$(mktemp)"
  curl -L "$1" > "$data"
  tar xf "$data"
  thedir="$(tar tf "$data" | head -n 1)"
  rm "$data"
  cd "$thedir"
}

function takegit() {
  git clone "$1"
  cd "$(basename ${1%%.git})"
}

function take() {
  if [[ $1 =~ ^(https?|ftp).*\.tar\.(gz|bz2|xz)$ ]]; then
    takeurl "$1"
  elif [[ $1 =~ ^([A-Za-z0-9]\+@|https?|git|ssh|ftps?|rsync).*\.git/?$ ]]; then
    takegit "$1"
  else
    takedir "$@"
  fi
}
